name: Maven-Build
on:
  push:
    branches:
      - '*'

jobs:
  auth:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Install JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_IDENTIFY_TOKEN }}

      - name: Print Java version
        run: java -version

      - name: Ping RT
        run: |
          jf --version
          jf rt ping --url https://hts2.jfrog.io/artifactory

      - name: Set up Maven settings (optional if using jf mvn)
        run: |
          mkdir -p ~/.m2
          cp .github/settings.xml ~/.m2/settings.xml

      - name: Configure JFrog CLI for Maven (resolution + deployment)
        run: |
          jf mvn-config \
            --server-id-resolve=setup-jfrog-cli-server \
            --server-id-deploy=setup-jfrog-cli-server \
            --repo-resolve-releases=sumedha-libs-release \
            --repo-resolve-snapshots=sumedha-libs-snapshot \
            --repo-deploy-releases=sumedha-libs-release-local \
            --repo-deploy-snapshots=sumedha-libs-snapshot-local

      - name: Check JFrog CLI config
        run: jf c show setup-jfrog-cli-server

      - name: Deploy artifacts using Maven Wrapper
        run: |
         jf mvn deploy \
         --build-number=1 \
         --build-name="Maven-demo-Github" \
         -Dmaven.install.skip=true \
         -Drevision=1
         env:
         MAVEN_EXECUTABLE: ./mvnw


      - name: Publish build info
        run: jf rt bp "Maven-demo-Github" 1
